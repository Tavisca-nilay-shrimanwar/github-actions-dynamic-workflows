name: Base Dynamodb backup workflow 

'on':
  workflow_dispatch:

env:
  SSL_CERT_DIR: "/etc/pki/tls/certs"

jobs:
    run-backup-ondemand:
        name: backup-ondemand
        if: github.event_name == 'workflow_dispatch' #&& github.event.inputs.choose_workflow == 'Backup'
        runs-on:
          - $aws_account
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          
          - name: Setup Python
            uses: actions/setup-python@v4
            with:
              python-version: 'pypy3.9'
          
          - run: pip3 install -r requirements.txt
              
          - name: Backup Dynamodb
            working-directory: ./DynamoDB/src/backup
            run: python run.py

    run-backup-scheduled:
        name: backup-scheduled
        if: github.event_name != 'workflow_dispatch'
        runs-on:
          - $aws_account
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          - name: Setup Python
            uses: actions/setup-python@v4
            with:
                python-version: 'pypy3.9'
            
          - run: pip3 install -r requirements.txt
                
          - name: Backup Dynamodb
            working-directory: ./DynamoDB/src/backup
            run: python run.py

    # list-backup:
    #     name: listbackup
    #     if: github.event_name == 'workflow_dispatch' && github.event.inputs.choose_workflow == 'List-Backup'
    #     runs-on:
    #       - $aws_account
    #     steps:
    #       - name: Checkout code
    #         uses: actions/checkout@v3

    #       - name: Setup Python
    #         uses: actions/setup-python@v4
    #         with:
    #           python-version: 'pypy3.9'
          
    #       - run: pip3 install -r requirements.txt
              
    #       - name: List Backup
    #         working-directory: ./DynamoDB/src/list
    #         run: python run.py