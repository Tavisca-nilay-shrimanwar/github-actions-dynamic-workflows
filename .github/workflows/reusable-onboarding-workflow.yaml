name: Reusable workflow
on:
  workflow_call:
    inputs:
      repository:
        required: true
        description: "Config file repository location. E.g. taviscasolutions-poc/DB-Backup-Restore"
        type: string
      # repository_pat:
      #   required: true
      #   description: "PAT to fetch config from repository"
      #   type: string
      type_of_database:
        required: true
        description: "Database"
        type: string
      operation:
        required: true
        description: "Database operation"
        type: string
    secrets:
      repository_pat:
        required: true
permissions:
  contents: write
  id-token: write
jobs:
  run-workflow-generator:
    runs-on: ubuntu-latest
    outputs:
      workflow_file_name: ${{ steps.generate-workflow.outputs.workflow_file_name }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::928814396842:role/github-actions-restore-poc-role
          role-duration-seconds: 900
          aws-region: us-east-1

      - name: Get repository PAT from SSM
        id: get-ssm-parameter
        run: |
          PAT=$(aws ssm get-parameter --name "github-actions-BnR-monorepo-pat" | jq -r '.Parameter.Value')
          echo "PAT=$PAT" >> $GITHUB_OUTPUT
      
      # - name: Print PAT
      #   run: |
      #     echo "The PAT is: ${{ steps.get-ssm-parameter.outputs.PAT }}"
      
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: "Tavisca-nilay-shrimanwar/github-actions-dynamic-workflows"
          token: ${{steps.get-ssm-parameter.outputs.PAT}} #required for github action to commit the file to workflow directory

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate workflow
        id: generate-workflow
        env:
          repository: ${{inputs.repository}}
          pat: ${{secrets.repository_pat}}
        run: |
          python convert.py -d ${{inputs.type_of_database}} -o ${{inputs.operation}}

      - name: Commit and Push new workflow file
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git pull origin main
          git add .
          git commit -m "New workflow file [${{steps.generate-workflow.outputs.workflow_file_name}}] created by [${{inputs.repository}}]"
          git push origin main

      # - name: Print workflow file output
      #   env:
      #     OUTPUT: ${{steps.generate-workflow.outputs.workflow_file_name}}
      #   run: |
      #     echo "$OUTPUT"
